var PluginSS_Switcher;!function(e){"use strict";var t=PluginSS_Switcher={elements:{},init:function(){t.get_elements()&&(t.setup_handlers(),t.set_form_display())},get_elements:function(){return t.elements.switcher=e("#pluginss-container"),!!t.elements.switcher.length&&(t.elements.notices=e("#pluginss-switcher-notices"),t.elements.fieldset_add=t.elements.switcher.find("fieldset.pluginss-add-state"),t.elements.fieldset_manage=t.elements.switcher.find("fieldset.pluginss-manage-states"),t.elements.button_add=t.elements.switcher.find('button[name="add_state"]'),t.elements.button_delete=t.elements.switcher.find('button[name="delete_state"]'),t.elements.button_load=t.elements.switcher.find('button[name="load_state"]'),t.elements.field_name=t.elements.switcher.find('input[name="state_name"]'),t.elements.field_state=t.elements.switcher.find('select[name="state_selector"]'),!0)},setup_handlers:function(){t.elements.field_name.keypress(t.add_state_keypress),t.elements.field_state.change(t.change_state_selector),t.elements.button_add.click(t.save_state),t.elements.button_delete.click(t.delete_state)},add_state_keypress:function(e){13===e.which&&(e.preventDefault(),t.save_state())},save_state:function(s){var n=t.elements.field_name.val();t.set_loading(),e.post(ajaxurl,{action:"pluginss_add_state",name:n,nonce:PluginSS_Data.nonce},function(s){var n=t.elements.notices.find(".pluginss-notice-dummy").clone();"undefined"!=typeof s.success&&s.success?(n.addClass("updated").find("p").html(s.data.message),t.elements.field_state.append('<option value="'+s.data.id+'" selected data-active="1">'+s.data.name+"</option>")):n.addClass("error").find("p").html(s.data.message),t.set_form_display(),t.elements.field_name.val(""),t.unset_loading(),n.removeClass("pluginss-notice-dummy").appendTo(t.elements.notices).show(),setTimeout(function(){n.slideUp(300,function(){e(this).remove()})},5e3)})},delete_state:function(){var s=t.elements.field_state.find("option:selected").val();t.set_loading(),e.post(ajaxurl,{action:"pluginss_delete_state",id:s,nonce:PluginSS_Data.nonce},function(s){var n=t.elements.notices.find(".pluginss-notice-dummy").clone();"undefined"!=typeof s.success&&s.success?(n.addClass("updated").find("p").html(s.data.message),t.elements.field_state.find("option:selected").remove()):n.addClass("error").find("p").html(s.data.message),t.set_form_display(),t.unset_loading(),n.removeClass("pluginss-notice-dummy").appendTo(t.elements.notices).show(),setTimeout(function(){n.slideUp(300,function(){e(this).remove()})},5e3)})},change_state_selector:function(){t.set_form_display()},set_loading:function(){var e=t.elements.switcher.find("input, select, button");e.prop("disabled",!0),t.elements.switcher.find(".pluginss-form").append('<span class="spinner is-active"></span>')},unset_loading:function(){var e=t.elements.switcher.find("input, select, button"),s=t.elements.switcher.find(".spinner");e.prop("disabled",!1),s.remove()},set_form_display:function(){t.elements.field_state.find("option").length?t.elements.fieldset_manage.show():t.elements.fieldset_manage.hide(),t.elements.field_state.find('option[data-active="1"]').length?(t.elements.fieldset_add.hide(),t.elements.fieldset_manage.removeClass("right-padded")):(t.elements.fieldset_add.show(),t.elements.fieldset_manage.addClass("right-padded")),t.elements.field_state.find("option:selected").attr("data-active")?t.elements.button_load.hide():t.elements.button_load.show()}};e(t.init)}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
