var PluginSS_Switcher;!function(e){"use strict";var t=PluginSS_Data.l10n||{},s=PluginSS_Switcher={elements:{},init:function(){s.get_elements()&&(s.setup_handlers(),s.set_form_display())},get_elements:function(){return s.elements.switcher=e("#pluginss-container"),!!s.elements.switcher.length&&(s.elements.notices=e("#pluginss-switcher-notices"),s.elements.fieldset_add=s.elements.switcher.find("fieldset.pluginss-add-state"),s.elements.fieldset_manage=s.elements.switcher.find("fieldset.pluginss-manage-states"),s.elements.button_add=s.elements.switcher.find('button[name="add_state"]'),s.elements.button_delete=s.elements.switcher.find('button[name="delete_state"]'),s.elements.button_load=s.elements.switcher.find('button[name="load_state"]'),s.elements.field_name=s.elements.switcher.find('input[name="state_name"]'),s.elements.field_state=s.elements.switcher.find('select[name="state_selector"]'),!0)},setup_handlers:function(){s.elements.field_name.keypress(s.add_state_keypress),s.elements.field_state.change(s.change_state_selector),s.elements.button_add.click(s.save_state),s.elements.button_delete.click(s.delete_state)},add_state_keypress:function(e){13===e.which&&(e.preventDefault(),s.save_state())},save_state:function(t){var n=s.elements.field_name.val();s.set_loading(),e.post(ajaxurl,{action:"pluginss_add_state",name:n,nonce:PluginSS_Data.nonce},function(t){var n=s.elements.notices.find(".pluginss-notice-dummy").clone();"undefined"!=typeof t.success&&t.success?(n.addClass("updated").find("p").html(t.data.message),s.elements.field_state.append('<option value="'+t.data.id+'" selected data-active="1">'+t.data.name+"</option>")):n.addClass("error").find("p").html(t.data.message),s.set_form_display(),s.elements.field_name.val(""),s.unset_loading(),n.removeClass("pluginss-notice-dummy").appendTo(s.elements.notices).show(),setTimeout(function(){n.slideUp(300,function(){e(this).remove()})},5e3)})},delete_state:function(){if(confirm(t.delete_state_confirm)){var n=s.elements.field_state.find("option:selected").val();s.set_loading(),e.post(ajaxurl,{action:"pluginss_delete_state",id:n,nonce:PluginSS_Data.nonce},function(t){var n=s.elements.notices.find(".pluginss-notice-dummy").clone();"undefined"!=typeof t.success&&t.success?(n.addClass("updated").find("p").html(t.data.message),s.elements.field_state.find("option:selected").remove()):n.addClass("error").find("p").html(t.data.message),s.set_form_display(),s.unset_loading(),n.removeClass("pluginss-notice-dummy").appendTo(s.elements.notices).show(),setTimeout(function(){n.slideUp(300,function(){e(this).remove()})},5e3)})}},change_state_selector:function(){s.set_form_display()},set_loading:function(){var e=s.elements.switcher.find("input, select, button");e.prop("disabled",!0),s.elements.switcher.find(".pluginss-form").append('<span class="spinner is-active"></span>')},unset_loading:function(){var e=s.elements.switcher.find("input, select, button"),t=s.elements.switcher.find(".spinner");e.prop("disabled",!1),t.remove()},set_form_display:function(){s.elements.field_state.find("option").length?s.elements.fieldset_manage.show():s.elements.fieldset_manage.hide(),s.elements.field_state.find('option[data-active="1"]').length?(s.elements.fieldset_add.hide(),s.elements.fieldset_manage.removeClass("right-padded")):(s.elements.fieldset_add.show(),s.elements.fieldset_manage.addClass("right-padded")),s.elements.field_state.find("option:selected").attr("data-active")?s.elements.button_load.hide():s.elements.button_load.show()}};e(s.init)}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
